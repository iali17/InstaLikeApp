{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n        {\\n            rollDice(numDice: 1, numSides: 6)\\n        }\\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport App from '../components/App';\nimport ApolloClient from 'apollo-boost';\nimport { gql } from 'apollo-boost';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { render } from 'react-dom';\nimport React from 'react';\nglobal.fetch = require('node-fetch');\nvar client = new ApolloClient();\nclient.query({\n  query: gql(_templateObject())\n}).then(function (result) {\n  return console.log(result);\n});\nrender(React.createElement(ApolloProvider, {\n  client: client\n}, React.createElement(App, null)), document.getElementById('root'));","map":{"version":3,"sources":["/home/iali/Bored/hello-next/pages/index.js"],"names":["App","ApolloClient","gql","ApolloProvider","render","React","global","fetch","require","client","query","then","result","console","log","document","getElementById"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,mBAAhB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEAC,MAAM,CAACC,KAAP,GAAeC,OAAO,CAAC,YAAD,CAAtB;AAEA,IAAMC,MAAM,GAAG,IAAIR,YAAJ,EAAf;AAEAQ,MAAM,CAACC,KAAP,CAAa;AACTA,EAAAA,KAAK,EAACR,GAAD;AADI,CAAb,EAMGS,IANH,CAMQ,UAAAC,MAAM;AAAA,SAAIC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAAJ;AAAA,CANd;AAQAR,MAAM,CACF,oBAAC,cAAD;AAAgB,EAAA,MAAM,EAAEK;AAAxB,GACI,oBAAC,GAAD,OADJ,CADE,EAIFM,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJE,CAAN","sourcesContent":["import App from '../components/App'\nimport ApolloClient from 'apollo-boost'\nimport { gql } from 'apollo-boost'\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { render } from 'react-dom'\nimport React from 'react';\n\nglobal.fetch = require('node-fetch');\n\nconst client = new ApolloClient();\n\nclient.query({\n    query:gql`\n        {\n            rollDice(numDice: 1, numSides: 6)\n        }\n    `\n}).then(result => console.log(result));\n\nrender(\n    <ApolloProvider client={client}>\n        <App/>\n    </ApolloProvider>, \n    document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}