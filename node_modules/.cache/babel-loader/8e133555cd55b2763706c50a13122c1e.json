{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from \"react\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n      {\\n        rollDice(numDice: 1, numSides: 6)\\n      }\\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Layout from '../components/MyLayout';\nimport { styled } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { Button } from '@material-ui/core';\nimport { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\nvar MyTextField = styled(TextField)({\n  marginLeft: 8,\n  marginRight: 8,\n  width: 200\n});\n\nvar NameForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(NameForm, _React$Component);\n\n  function NameForm(props) {\n    var _this;\n\n    _classCallCheck(this, NameForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NameForm).call(this, props));\n    _this.state = {\n      username: '',\n      name: '',\n      password: ''\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(NameForm, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var target = event.target;\n      var name = target.name;\n      this.setState(_defineProperty({}, name, target.value));\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      alert('Username: ' + this.state.username + '\\n' + 'Full Name: ' + this.state.name + '\\n' + 'Password: ' + this.state.password + '\\n' //'Random Number' + this.RandomNumber() + '\\n'\n      );\n      event.preventDefault();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        onSubmit: this.handleSubmit\n      }, React.createElement(MyTextField, {\n        required: true,\n        name: \"username\",\n        id: \"standard-required\",\n        label: \"Username\",\n        value: this.state.username,\n        onChange: this.handleChange,\n        margin: \"normal\"\n      }), React.createElement(MyTextField, {\n        required: true,\n        name: \"name\",\n        id: \"standard-required\",\n        label: \"Full Name\",\n        value: this.state.name,\n        onChange: this.handleChange,\n        margin: \"normal\"\n      }), React.createElement(MyTextField, {\n        required: true,\n        name: \"password\",\n        id: \"standard-password-input\",\n        label: \"Password\",\n        type: \"password\",\n        value: this.state.password,\n        onChange: this.handleChange,\n        margin: \"normal\"\n      }), React.createElement(Button, {\n        type: \"submit\",\n        variant: \"contained\"\n      }, \"Submit\"));\n    }\n  }]);\n\n  return NameForm;\n}(React.Component);\n\nfunction RandomNumber() {\n  var _useQuery = useQuery(gql(_templateObject())),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return React.createElement(\"p\", null, \"Loading...\");\n  if (error) return React.createElement(\"p\", null, \"Error :(\");\n  return data.RandomNumber;\n}\n\nexport default function SignUp() {\n  return React.createElement(Layout, null, React.createElement(RandomNumber, null), React.createElement(NameForm, null));\n}","map":{"version":3,"sources":["/home/iali/Bored/hello-next/pages/signup.js"],"names":["Layout","styled","TextField","Button","gql","useQuery","MyTextField","marginLeft","marginRight","width","NameForm","props","state","username","name","password","handleChange","bind","handleSubmit","event","target","setState","value","alert","preventDefault","React","Component","RandomNumber","loading","error","data","SignUp"],"mappings":"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","sourcesContent":["import Layout from '../components/MyLayout'\nimport { styled } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { Button } from '@material-ui/core';\nimport { gql } from 'apollo-boost'\nimport { useQuery } from '@apollo/react-hooks';\n\nconst MyTextField = styled(TextField)({\n  marginLeft: 8,\n  marginRight: 8,\n  width: 200,\n});\n\nclass NameForm extends React.Component {\n  \n    constructor(props) {\n      super(props);\n      this.state = {\n        username: '', \n        name: '', \n        password: ''\n      };\n\n      this.handleChange = this.handleChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n      const target = event.target;\n      const name = target.name;\n      this.setState({\n        [name]: target.value\n      });\n    }\n\n  \n    handleSubmit(event) {\n      alert('Username: ' + this.state.username + '\\n' +\n            'Full Name: ' + this.state.name + '\\n' +\n            'Password: ' + this.state.password + '\\n'\n            //'Random Number' + this.RandomNumber() + '\\n'\n      );\n      event.preventDefault();\n    }\n  \n    render() {\n      return (\n        <form onSubmit={this.handleSubmit}>\n          <MyTextField\n          required\n          name=\"username\"\n          id=\"standard-required\"\n          label=\"Username\"\n          value = {this.state.username}\n          onChange={this.handleChange}\n          margin=\"normal\"\n          />\n          \n          <MyTextField\n          required\n          name=\"name\"\n          id=\"standard-required\"\n          label=\"Full Name\"\n          value = {this.state.name}\n          onChange={this.handleChange}\n          margin=\"normal\"\n          />\n\n          <MyTextField\n          required\n          name=\"password\"\n          id=\"standard-password-input\"\n          label=\"Password\"\n          type=\"password\"\n          value = {this.state.password}\n          onChange={this.handleChange}\n          margin=\"normal\"\n          />\n          \n          <Button type=\"submit\" variant=\"contained\">\n            Submit\n          </Button>\n            \n        </form>\n      );\n    }\n  }\n\nfunction RandomNumber() {\n    const { loading, error, data } = useQuery(gql`\n      {\n        rollDice(numDice: 1, numSides: 6)\n      }\n    `);\n\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n\n    return data.RandomNumber\n  }\n\n\nexport default function SignUp() {\n    return (\n        <Layout>\n          <RandomNumber />\n          <NameForm />\n        </Layout>\n        \n    )\n}\n"]},"metadata":{},"sourceType":"module"}